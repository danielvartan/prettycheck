% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/namespace.R
\name{check_namespace}
\alias{check_namespace}
\alias{test_namespace}
\alias{assert_namespace}
\alias{expect_namespace}
\title{Check if a namespace is loaded}
\usage{
check_namespace(x, null_ok = FALSE, .names = deparse(substitute(x)))

test_namespace(x, null_ok = FALSE, .names = deparse(substitute(x)))

assert_namespace(
  x,
  null_ok = FALSE,
  .names = deparse(substitute(x)),
  .var.name = checkmate::vname(x),
  add = NULL
)

expect_namespace(
  x,
  null_ok = FALSE,
  .names = deparse(substitute(x)),
  info = NULL,
  label = checkmate::vname(x)
)
}
\arguments{
\item{x}{Any R object.}

\item{null_ok}{(Optional) A \code{\link[base:logical]{logical}} flag indicating if
\code{NULL} values are allowed (Default: \code{FALSE}).}

\item{.names}{(Optional) A \code{\link[base:character]{character}} vector specifying
the names of the objects being tested. This argument is used internally
and should not be set by the user.}

\item{.var.name}{(Optional) A \code{\link[base:character]{character}} string
indicating the name of the checked object to print in assertions.
This argument is used internally and should not be set by the user.}

\item{add}{(Optional) A \code{\link[checkmate:AssertCollection]{AssertCollection}}
object indicating the collection to store assertion messages. This
argument is used internally and should not be set by the user.}

\item{info}{(Optional) A \code{\link[base:character]{character}} string with extra
information to be included in the message for the `testthat`` reporter.
This argument is used internally and should not be set by the user.}

\item{label}{(Optional) A \code{\link[base:character]{character}} string
indicating the name of the checked object to print in messages.
This argument is used internally and should not be set by the user.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\verb{*_namespace()} check if an argument has zero length.
}
\examples{
test_namespace("TeSt")
#> [1] FALSE # Expected

test_namespace("prettycheck")
#> [1] TRUE # Expected
}
