% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/color.R
\name{assert_color}
\alias{assert_color}
\title{Assert a color input}
\usage{
assert_color(color, any_missing = FALSE, null_ok = FALSE)
}
\arguments{
\item{color}{A \code{\link[base:character]{character}} vector with color names or a
hexadecimal color codes.}

\item{any_missing}{(Optional) A \code{\link[base:logical]{logical}} flag indicating
if missing values are allowed (Default: \code{TRUE}).}

\item{null_ok}{(Optional) A \code{\link[base:logical]{logical}} flag indicating if
\code{NULL} values are allowed (Default: \code{FALSE}).}
}
\value{
\code{color} (as \link[base:invisible]{invisible}) if it passes the test; an
error message otherwise.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{assert_color()} ensures that the provided color values are valid color
names recognized by \code{grDevices::colors()} or valid hexadecimal color codes
(\verb{#RGB} or \verb{#RRGGBB}).
}
\examples{
assert_color("#FFF")
assert_color("#FF5733")
assert_color("#FF0000FF")
assert_color("blue")
assert_color("transparent")
assert_color(c("#FF5733", "blue", "transparent"))
}
